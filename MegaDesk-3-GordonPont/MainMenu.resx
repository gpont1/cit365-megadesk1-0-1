<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>